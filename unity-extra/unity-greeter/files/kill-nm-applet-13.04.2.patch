diff -Naur unity-greeter-13.04.2_orig/src/unity-greeter.vala unity-greeter-13.04.2/src/unity-greeter.vala
--- unity-greeter-13.04.2_orig/src/unity-greeter.vala	2013-02-21 10:33:40.000000000 +0100
+++ unity-greeter-13.04.2/src/unity-greeter.vala	2013-04-13 15:45:06.534083796 +0200
@@ -30,6 +30,8 @@
 
     public bool test_mode = false;
 
+    private Pid nm_applet_pid = 0;
+
     private string state_file;
     private KeyFile state;
 
@@ -46,10 +48,11 @@
 
     private static Timer log_timer;
 
-    private UnityGreeter (bool test_mode_)
+    private UnityGreeter (bool test_mode_, Pid _nm_applet_pid_)
     {
         singleton = this;
         test_mode = test_mode_;
+        nm_applet_pid = _nm_applet_pid_;
 
         /* Prepare to set the background */
         debug ("Creating background surface");
@@ -170,6 +173,16 @@
             starting_session ();
             try
             {
+                debug ("start session! [nm_applet_pid: %d]", nm_applet_pid);
+                if (nm_applet_pid != 0)
+                {
+                    debug ("try too stop nm-applet");
+                    Posix.kill (nm_applet_pid, Posix.SIGKILL);
+                    int status;
+                    Posix.waitpid (nm_applet_pid, out status, 0);
+                    nm_applet_pid = 0;
+                }
+
                 greeter.start_session_sync (session);
             }
             catch (Error e)
@@ -415,6 +428,7 @@
         Environment.set_variable ("GTK_MODULES", "atk-bridge", false);
 
         Pid atspi_pid = 0;
+        Pid _nm_applet_pid = 0;
 
         try
         {
@@ -506,12 +520,6 @@
         if (value != "")
             settings.set ("gtk-xft-rgba", value, null);
 
-        debug ("Creating Unity Greeter");
-        var greeter = new UnityGreeter (do_test_mode);
-
-        debug ("Showing greeter");
-        greeter.show ();
-
         if (!do_test_mode)
         {
             /* Make nm-applet hide items the user does not have permissions to interact with */
@@ -519,7 +527,15 @@
 
             try
             {
-                Process.spawn_command_line_async ("nm-applet");
+                string[] argv;
+
+                Shell.parse_argv ("nm-applet", out argv);
+                Process.spawn_async (null,
+                                     argv,
+                                     null,
+                                     SpawnFlags.SEARCH_PATH,
+                                     null,
+                                     out _nm_applet_pid);
             }
             catch (Error e)
             {
@@ -527,9 +543,17 @@
             }
         }
 
+        debug ("Creating Unity Greeter");
+        var greeter = new UnityGreeter (do_test_mode,_nm_applet_pid);
+
+        debug ("Showing greeter");
+        greeter.show ();
+
         debug ("Starting main loop");
         Gtk.main ();
 
+        debug ("Exit Unity Greeter");
+
         if (atspi_pid != 0)
         {
             Posix.kill (atspi_pid, Posix.SIGKILL);
